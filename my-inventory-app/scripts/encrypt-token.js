const crypto = require('crypto');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

rl.question('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à GitHub —Ç–æ–∫–µ–Ω: ', (token) => {
  const algorithm = 'aes-256-cbc';
  const key = crypto.randomBytes(32).toString('hex');
  const iv = crypto.randomBytes(16).toString('hex');
  
  // –ü—Ä–æ—Å—Ç–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π
  const cipher = crypto.createCipheriv(algorithm, Buffer.from(key, 'hex'), Buffer.from(iv, 'hex'));
  
  let encrypted = cipher.update(token, 'utf8', 'hex');
  encrypted += cipher.final('hex');
  
  const result = {
    encryptedToken: encrypted,
    iv: iv
  };
  
  console.log('\n‚úÖ –¢–û–ö–ï–ù –£–°–ü–ï–®–ù–û –ó–ê–®–ò–§–†–û–í–ê–ù!');
  console.log('\nüìÅ –î–û–ë–ê–í–¨–¢–ï –í .env –§–ê–ô–õ:');
  console.log(`ENCRYPTED_GITHUB_TOKEN=${JSON.stringify(result)}`);
  console.log(`ENCRYPTION_KEY=${key}`);
  
  rl.close();
});