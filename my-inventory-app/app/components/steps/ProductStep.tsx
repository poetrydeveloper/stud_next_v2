interface ProductStepProps {
  formData: any;
  selectedNode: any;
  brands: any[];
  handleInputChange: (field: string, value: string | boolean) => void;
}

export default function ProductStep({ formData, selectedNode, brands, handleInputChange }: ProductStepProps) {
  return (
    <div className="space-y-4">
      <div>
        <label className="block font-medium mb-2">–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ *</label>
        <input
          type="text"
          className="w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
          value={formData.productName}
          onChange={(e) => handleInputChange('productName', e.target.value)}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
        />
      </div>

      <div>
        <label className="block font-medium mb-2">–ö–æ–¥ —Ç–æ–≤–∞—Ä–∞ *</label>
        <input
          type="text"
          className="w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
          value={formData.productCode}
          onChange={(e) => handleInputChange('productCode', e.target.value)}
          placeholder="–í–≤–µ–¥–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥"
        />
      </div>

      <div>
        <label className="block font-medium mb-2">–û–ø–∏—Å–∞–Ω–∏–µ</label>
        <textarea
          className="w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
          rows={3}
          value={formData.productDescription}
          onChange={(e) => handleInputChange('productDescription', e.target.value)}
          placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
        />
      </div>

      <div>
        <label className="block font-medium mb-2">–ë—Ä–µ–Ω–¥</label>
        <select
          className="w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
          value={formData.productBrandId}
          onChange={(e) => handleInputChange('productBrandId', e.target.value)}
        >
          <option value="">-- –≤—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥ --</option>
          {brands.map((brand) => (
            <option key={brand.id} value={brand.id}>
              {brand.name}
            </option>
          ))}
        </select>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏ */}
      <div className="bg-blue-50 border border-blue-200 rounded p-3">
        <div className="text-sm text-blue-800">
          <div className="font-medium">–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</div>
          {selectedNode?.type === 'category' && (
            <div>üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <strong>{selectedNode.name}</strong></div>
          )}
          {selectedNode?.type === 'spine' && (
            <div>üî∑ Spine: <strong>{selectedNode.name}</strong></div>
          )}
          {formData.spineName && selectedNode?.type === 'category' && (
            <div>üÜï –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω Spine: <strong>{formData.spineName}</strong></div>
          )}
        </div>
      </div>
    </div>
  );
}