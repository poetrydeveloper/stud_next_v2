// app/components/inventory/CreateSnapshotButton.tsx
"use client";
import { useState } from 'react';

export default function CreateSnapshotButton() {
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState<any>(null);

  const createSnapshot = async () => {
    if (!confirm('–°–æ–∑–¥–∞—Ç—å —Å–Ω–∏–º–æ–∫ —Ç–µ–∫—É—â–∏—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤? –≠—Ç–æ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç.')) {
      return;
    }

    setLoading(true);
    setResult(null);

    try {
      const response = await fetch('/api/inventory/snapshots/daily', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      const data = await response.json();
      setResult(data);
      
      if (data.ok) {
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        console.log('–°–Ω–∏–º–æ–∫ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
      }
    } catch (error) {
      setResult({ ok: false, error: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏' });
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="bg-white p-4 rounded-lg border mb-6">
      <div className="flex items-center justify-between">
        <div>
          <h3 className="text-lg font-semibold">üì∏ –°–Ω–∏–º–∫–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤</h3>
          <p className="text-gray-600 text-sm">
            –§–∏–∫—Å–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∫–ª–∞–¥–∞ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
          </p>
        </div>
        <button
          onClick={createSnapshot}
          disabled={loading}
          className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2"
        >
          {loading ? (
            <>
              <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin" />
              –°–æ–∑–¥–∞–Ω–∏–µ...
            </>
          ) : (
            'üì∏ –°–æ–∑–¥–∞—Ç—å —Å–Ω–∏–º–æ–∫'
          )}
        </button>
      </div>

      {result && (
        <div className={`mt-4 p-3 rounded ${
          result.ok ? 'bg-green-100 border border-green-400 text-green-700' : 'bg-red-100 border border-red-400 text-red-700'
        }`}>
          {result.ok ? (
            <div>
              <strong>‚úÖ –£—Å–ø–µ—à–Ω–æ!</strong> {result.message}
              {result.data && (
                <div className="text-sm mt-2">
                  –ü—Ä–æ–¥—É–∫—Ç–æ–≤ —Å–æ stock: {result.data.summary.productsWithStock}<br />
                  –í—Å–µ–≥–æ –µ–¥–∏–Ω–∏—Ü: {result.data.summary.totalUnits}<br />
                  –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {result.data.summary.totalValue.toLocaleString()} ‚ÇΩ
                </div>
              )}
            </div>
          ) : (
            <div>
              <strong>‚ùå –û—à–∏–±–∫–∞:</strong> {result.error}
            </div>
          )}
        </div>
      )}
    </div>
  );
}