// app/disassembly/scenario/create/page.tsx
"use client";

import { useState, useEffect } from "react";
import { useSearchParams } from "next/navigation";
import DisassemblyScenarioForm from "@/app/components/DisassemblyScenarioForm";

interface ProductUnit {
  id: number;
  serialNumber: string;
  productName?: string;
  statusProduct: string;
  disassemblyStatus: string;
  product?: {
    id: number;
    name: string;
    code: string;
    description?: string;
    brand?: {
      name: string;
    };
    spine?: {
      id: number;
      name: string;
    };
    category?: {
      name: string;
    };
    images?: Array<{
      path: string;
      isMain: boolean;
    }>;
  };
}

export default function CreateScenarioPage() {
  const searchParams = useSearchParams();
  const unitId = searchParams.get("unitId");
  
  const [unit, setUnit] = useState<ProductUnit | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    if (!unitId) {
      setError("ID unit –Ω–µ —É–∫–∞–∑–∞–Ω");
      setLoading(false);
      return;
    }

    const loadUnit = async () => {
      try {
        setLoading(true);
        const response = await fetch(`/api/disassembly/unit/${unitId}`);
        const data = await response.json();
        
        if (data.ok) {
          setUnit(data.data);
        } else {
          setError(data.error || "Unit –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }
      } catch (err: any) {
        setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ unit: " + err.message);
      } finally {
        setLoading(false);
      }
    };

    loadUnit();
  }, [unitId]);

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
          <p className="mt-4 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö unit...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">üòû</div>
          <h1 className="text-2xl font-bold text-gray-900 mb-2">–û—à–∏–±–∫–∞</h1>
          <p className="text-gray-600 mb-6">{error}</p>
          <button
            onClick={() => window.history.back()}
            className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"
          >
            –ù–∞–∑–∞–¥
          </button>
        </div>
      </div>
    );
  }

  if (!unit) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">üì≠</div>
          <h1 className="text-2xl font-bold text-gray-900 mb-2">Unit –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>
          <p className="text-gray-600 mb-6">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ unit</p>
          <button
            onClick={() => window.history.back()}
            className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"
          >
            –ù–∞–∑–∞–¥
          </button>
        </div>
      </div>
    );
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–∂–Ω–æ –ª–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è —ç—Ç–æ–≥–æ unit
  if (unit.statusProduct !== "IN_STORE" || unit.disassemblyStatus !== "MONOLITH") {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">üö´</div>
          <h1 className="text-2xl font-bold text-gray-900 mb-2">–ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π</h1>
          <p className="text-gray-600 mb-4">
            Unit –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ —Å–∫–ª–∞–¥–µ (IN_STORE) –∏ –∏–º–µ—Ç—å —Å—Ç–∞—Ç—É—Å MONOLITH
          </p>
          <div className="text-sm text-gray-500 mb-6">
            –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {unit.statusProduct}, {unit.disassemblyStatus}
          </div>
          <button
            onClick={() => window.history.back()}
            className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"
          >
            –ù–∞–∑–∞–¥
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="container mx-auto px-4">
        <div className="max-w-4xl mx-auto">
          <div className="mb-8">
            <h1 className="text-3xl font-bold text-gray-900 mb-2">
              –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è —Ä–∞–∑–±–æ—Ä–∫–∏
            </h1>
            <p className="text-gray-600">
              –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è –¥–ª—è —Ä–∞–∑–±–æ—Ä–∫–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–æ—Å—Ç–∞–≤–Ω—ã–µ —á–∞—Å—Ç–∏
            </p>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ unit */}
          <div className="bg-white rounded-lg border border-gray-200 p-6 mb-6">
            <h2 className="text-lg font-semibold text-gray-900 mb-4">
              –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ –¥–ª—è —Ä–∞–∑–±–æ—Ä–∫–∏
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <div className="text-sm text-gray-600">–ù–∞–∑–≤–∞–Ω–∏–µ</div>
                <div className="font-medium text-gray-900">
                  {unit.productName || unit.product?.name}
                </div>
              </div>
              <div>
                <div className="text-sm text-gray-600">–ê—Ä—Ç–∏–∫—É–ª</div>
                <div className="font-medium text-gray-900">
                  {unit.product?.code}
                </div>
              </div>
              <div>
                <div className="text-sm text-gray-600">–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä</div>
                <div className="font-mono text-gray-900">
                  {unit.serialNumber}
                </div>
              </div>
              <div>
                <div className="text-sm text-gray-600">–ë—Ä–µ–Ω–¥</div>
                <div className="font-medium text-gray-900">
                  {unit.product?.brand?.name || "‚Äî"}
                </div>
              </div>
            </div>
          </div>

          {/* –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è */}
          <DisassemblyScenarioForm unit={unit} />
        </div>
      </div>
    </div>
  );
}