// app/store/SaleButtons.tsx (–û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø - –ö–û–ú–ü–ê–ö–¢–ù–´–ô –ú–ê–ö–ï–¢)
"use client";

import { useState } from "react";
import SaleModal from "./SaleModal";
import DisassemblyButtons from "./DisassemblyButtons";

interface ProductUnit {
  id: number;
  statusProduct: string;
  disassemblyStatus: string;
  isParsingAlgorithm: boolean;
  productName?: string;
  serialNumber: string;
  productCode?: string;
  requestPricePerUnit?: number;
  product?: {
    name: string;
    code: string;
    brand?: {
      name: string;
    };
  };
}

interface SaleButtonsProps {
  unit: ProductUnit;
  onSaleSuccess: () => void;
}

export default function SaleButtons({ unit, onSaleSuccess }: SaleButtonsProps) {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [saleType, setSaleType] = useState<'CASH' | 'CREDIT' | null>(null);

  const handleSaleClick = (isCredit: boolean = false) => {
    setSaleType(isCredit ? 'CREDIT' : 'CASH');
    setIsModalOpen(true);
  };

  const handleModalClose = () => {
    setIsModalOpen(false);
    setSaleType(null);
  };

  const handleSaleSuccess = () => {
    onSaleSuccess();
    handleModalClose();
  };

  // –î–ª—è –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  if (unit.statusProduct === "SOLD" || unit.statusProduct === "CREDIT") {
    return (
      <div className="text-right text-xs">
        <div className="text-gray-600">
          {unit.statusProduct === "SOLD" ? "‚úÖ –ü—Ä–æ–¥–∞–Ω–æ" : "üí≥ –í –∫—Ä–µ–¥–∏—Ç–µ"}
        </div>
      </div>
    );
  }

  // –¢–æ–ª—å–∫–æ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
  if (unit.statusProduct !== "IN_STORE") {
    return null;
  }

  return (
    <>
      <div className="flex flex-col space-y-2 min-w-[80px]">
        {/* –ö–Ω–æ–ø–∫–∏ –ø—Ä–æ–¥–∞–∂–∏ - –∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ */}
        <div className="flex flex-col space-y-1">
          <button 
            onClick={() => handleSaleClick(false)}
            className="px-2 py-1 bg-green-600 text-white text-xs font-medium rounded hover:bg-green-700 transition-colors flex items-center space-x-1 justify-center"
          >
            <span className="text-xs">üí∞</span>
            <span>–ü—Ä–æ–¥–∞—Ç—å</span>
          </button>
          <button 
            onClick={() => handleSaleClick(true)}
            className="px-2 py-1 bg-orange-600 text-white text-xs font-medium rounded hover:bg-orange-700 transition-colors flex items-center space-x-1 justify-center"
          >
            <span className="text-xs">üí≥</span>
            <span>–ö—Ä–µ–¥–∏—Ç</span>
          </button>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ —Ä–∞–∑–±–æ—Ä–∫–∏ - –∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ */}
        <DisassemblyButtons 
          unit={unit}
          onOperationSuccess={onSaleSuccess}
        />
      </div>

      <SaleModal
        isOpen={isModalOpen}
        onClose={handleModalClose}
        unit={unit}
        onSaleSuccess={handleSaleSuccess}
      />
    </>
  );
}