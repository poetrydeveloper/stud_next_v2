// app/store/SaleButtons.tsx (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
"use client";

import { useState } from "react";
import SaleModal from "./SaleModal";

interface ProductUnit {
  id: number;
  statusProduct: string;
  productName?: string;
  serialNumber: string;
  productCode?: string;
  requestPricePerUnit?: number;
  product?: {
    name: string;
    code: string;
    brand?: {
      name: string;
    };
  };
}

interface SaleButtonsProps {
  unit: ProductUnit;
  onSaleSuccess: () => void;
}

export default function SaleButtons({ unit, onSaleSuccess }: SaleButtonsProps) {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [saleType, setSaleType] = useState<'CASH' | 'CREDIT' | null>(null);

  const handleSaleClick = (isCredit: boolean = false) => {
    setSaleType(isCredit ? 'CREDIT' : 'CASH');
    setIsModalOpen(true);
  };

  const handleModalClose = () => {
    setIsModalOpen(false);
    setSaleType(null);
  };

  const handleSaleSuccess = () => {
    onSaleSuccess();
    handleModalClose();
  };

  // –î–ª—è –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  if (unit.statusProduct === "SOLD" || unit.statusProduct === "CREDIT") {
    return (
      <div className="text-right text-xs">
        <div className="text-gray-600 mb-1">
          {unit.statusProduct === "SOLD" ? "‚úÖ –ü—Ä–æ–¥–∞–Ω–æ" : "üí≥ –í –∫—Ä–µ–¥–∏—Ç–µ"}
        </div>
      </div>
    );
  }

  // –¢–æ–ª—å–∫–æ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–¥–∞–∂–∏
  if (unit.statusProduct !== "IN_STORE") {
    return null;
  }

  return (
    <>
      <div className="flex flex-col space-y-2">
        <button 
          onClick={() => handleSaleClick(false)}
          className="px-4 py-2 bg-green-600 text-white text-sm font-medium rounded-lg hover:bg-green-700 transition-colors flex items-center space-x-2 min-w-[100px] justify-center"
        >
          <span>üí∞</span>
          <span>–ü—Ä–æ–¥–∞—Ç—å</span>
        </button>
        <button 
          onClick={() => handleSaleClick(true)}
          className="px-4 py-2 bg-orange-600 text-white text-sm font-medium rounded-lg hover:bg-orange-700 transition-colors flex items-center space-x-2 min-w-[100px] justify-center"
        >
          <span>üí≥</span>
          <span>–ö—Ä–µ–¥–∏—Ç</span>
        </button>
      </div>

      <SaleModal
        isOpen={isModalOpen}
        onClose={handleModalClose}
        unit={unit}
        onSaleSuccess={handleSaleSuccess}
      />
    </>
  );
}