// app/store/StoreSearch.tsx (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
"use client";

interface StoreSearchProps {
  searchQuery: string;
  onSearchChange: (query: string) => void;
  brands: string[];
  selectedBrand: string;
  onBrandChange: (brand: string) => void;
  selectedStatus: string;
  onStatusChange: (status: string) => void;
}

export default function StoreSearch({
  searchQuery,
  onSearchChange,
  brands,
  selectedBrand,
  onBrandChange,
  selectedStatus,
  onStatusChange
}: StoreSearchProps) {
  // –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  const statusOptions = [
    { value: "all", label: "üìä –í—Å–µ —Å—Ç–∞—Ç—É—Å—ã", description: "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã" },
    { value: "IN_STORE", label: "üè™ –ù–∞ —Å–∫–ª–∞–¥–µ", description: "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏" },
    { value: "CLEAR", label: "üîµ CLEAR", description: "–ì–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ" },
    { value: "IN_REQUEST", label: "üìã –í –∑–∞—è–≤–∫–µ", description: "–ó–∞–∫–∞–∑–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã" },
    { value: "IN_DELIVERY", label: "üöö –í –¥–æ—Å—Ç–∞–≤–∫–µ", description: "–í –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–æ—Å—Ç–∞–≤–∫–∏" },
    { value: "ARRIVED", label: "‚úÖ –ü—Ä–∏–±—ã–ª", description: "–ù–µ–¥–∞–≤–Ω–æ –ø—Ä–∏–±—ã–≤—à–∏–µ" },
    { value: "IN_DISASSEMBLED", label: "üîß –†–∞–∑–æ–±—Ä–∞–Ω", description: "–†–∞–∑–æ–±—Ä–∞–Ω–Ω—ã–µ –Ω–∞–±–æ—Ä—ã" },
    { value: "IN_COLLECTED", label: "üîÑ –°–æ–±—Ä–∞–Ω", description: "–°–æ–±—Ä–∞–Ω–Ω—ã–µ –Ω–∞–±–æ—Ä—ã" },
    { value: "SOLD", label: "üí∞ –ü—Ä–æ–¥–∞–Ω–æ", description: "–ü—Ä–æ–¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã" },
    { value: "CREDIT", label: "üí≥ –í –∫—Ä–µ–¥–∏—Ç–µ", description: "–û—Ç–¥–∞–Ω–Ω—ã–µ –≤ –∫—Ä–µ–¥–∏—Ç" },
    { value: "LOST", label: "‚ùå –£—Ç–µ—Ä—è–Ω–æ", description: "–£—Ç–µ—Ä—è–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã" }
  ];

  // –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã (–º—É–ª—å—Ç–∏—Å—Ç–∞—Ç—É—Å—ã)
  const quickFilters = [
    { 
      value: "all", 
      label: "–í—Å–µ", 
      description: "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã",
      statuses: ["all"]
    },
    { 
      value: "IN_STORE,CLEAR,ARRIVED", 
      label: "–ê–∫—Ç–∏–≤–Ω—ã–µ", 
      description: "–¢–æ–≤–∞—Ä—ã –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π",
      statuses: ["IN_STORE", "CLEAR", "ARRIVED"]
    },
    { 
      value: "IN_STORE,IN_DISASSEMBLED", 
      label: "–î–ª—è —Å–±–æ—Ä–∫–∏", 
      description: "–ú–æ–∂–Ω–æ —Ä–∞–∑–±–∏—Ä–∞—Ç—å/—Å–æ–±–∏—Ä–∞—Ç—å",
      statuses: ["IN_STORE", "IN_DISASSEMBLED"]
    },
    { 
      value: "IN_STORE,CLEAR,ARRIVED,IN_DISASSEMBLED,IN_COLLECTED", 
      label: "–ë–µ–∑ –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö", 
      description: "–ò—Å–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–¥–∞–Ω–Ω—ã–µ –∏ —É—Ç–µ—Ä—è–Ω–Ω—ã–µ",
      statuses: ["IN_STORE", "CLEAR", "ARRIVED", "IN_DISASSEMBLED", "IN_COLLECTED"]
    },
    { 
      value: "SOLD,CREDIT,LOST", 
      label: "–ê—Ä—Ö–∏–≤", 
      description: "–¢–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–Ω–Ω—ã–µ/—É—Ç–µ—Ä—è–Ω–Ω—ã–µ",
      statuses: ["SOLD", "CREDIT", "LOST"]
    }
  ];

  // –ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
  const getCurrentStatusDescription = () => {
    if (selectedStatus === "all") return "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    const quickFilter = quickFilters.find(filter => filter.value === selectedStatus);
    if (quickFilter) return quickFilter.description;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–¥–∏–Ω–æ—á–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
    const singleStatus = statusOptions.find(opt => opt.value === selectedStatus);
    if (singleStatus) return singleStatus.description;
    
    // –ú—É–ª—å—Ç–∏—Å—Ç–∞—Ç—É—Å (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π)
    const statusCount = selectedStatus.split(',').length;
    return `–ü–æ–∫–∞–∑–∞–Ω–æ ${statusCount} —Å—Ç–∞—Ç—É—Å–æ–≤`;
  };

  // –ü–æ–ª—É—á–∏—Ç—å –ª–µ–π–±–ª –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
  const getCurrentStatusLabel = () => {
    if (selectedStatus === "all") return "–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã";
    
    const quickFilter = quickFilters.find(filter => filter.value === selectedStatus);
    if (quickFilter) return quickFilter.label;
    
    const singleStatus = statusOptions.find(opt => opt.value === selectedStatus);
    if (singleStatus) return singleStatus.label;
    
    return "–ù–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å–æ–≤";
  };

  return (
    <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        
        {/* –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –∞—Ä—Ç–∏–∫—É–ª—É */}
        <div className="md:col-span-2">
          <label className="block text-sm font-medium text-gray-700 mb-2">
            üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
          </label>
          <div className="relative">
            <input
              type="text"
              value={searchQuery}
              onChange={(e) => onSearchChange(e.target.value)}
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ, –∞—Ä—Ç–∏–∫—É–ª, —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä..."
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
            />
            {searchQuery && (
              <button
                onClick={() => onSearchChange("")}
                className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
              >
                ‚úï
              </button>
            )}
          </div>
          <p className="text-xs text-gray-500 mt-1">
            –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –∫–æ–¥—É, —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É
          </p>
        </div>

        {/* –§–∏–ª—å—Ç—Ä –ø–æ –±—Ä–µ–Ω–¥–∞–º */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            üè∑Ô∏è –ë—Ä–µ–Ω–¥
          </label>
          <select
            value={selectedBrand}
            onChange={(e) => onBrandChange(e.target.value)}
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
          >
            <option value="all">–í—Å–µ –±—Ä–µ–Ω–¥—ã</option>
            {brands.filter(brand => brand !== "all").map(brand => (
              <option key={brand} value={brand}>
                {brand}
              </option>
            ))}
          </select>
        </div>

        {/* –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            üìä –°—Ç–∞—Ç—É—Å
          </label>
          <select
            value={selectedStatus}
            onChange={(e) => onStatusChange(e.target.value)}
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
          >
            {/* –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
            <optgroup label="–ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã">
              {quickFilters.map(filter => (
                <option key={filter.value} value={filter.value}>
                  {filter.label}
                </option>
              ))}
            </optgroup>
            
            {/* –í—Å–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã */}
            <optgroup label="–û—Ç–¥–µ–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã">
              {statusOptions.map(option => (
                <option key={option.value} value={option.value}>
                  {option.label}
                </option>
              ))}
            </optgroup>
          </select>
          <p className="text-xs text-gray-500 mt-1">
            {getCurrentStatusDescription()}
          </p>
        </div>

      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
      <div className="mt-4">
        <label className="block text-sm font-medium text-gray-700 mb-2">
          üöÄ –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:
        </label>
        <div className="flex flex-wrap gap-2">
          {quickFilters.map((filter) => (
            <button
              key={filter.value}
              onClick={() => onStatusChange(filter.value)}
              className={`px-3 py-2 text-sm rounded-lg border transition-colors flex items-center space-x-2 ${
                selectedStatus === filter.value
                  ? "bg-blue-100 text-blue-800 border-blue-300 shadow-sm"
                  : "bg-gray-100 text-gray-700 border-gray-300 hover:bg-gray-200"
              }`}
            >
              <span>{filter.label}</span>
              {filter.statuses.length > 1 && (
                <span className="text-xs bg-gray-200 px-1.5 py-0.5 rounded">
                  {filter.statuses.length}
                </span>
              )}
            </button>
          ))}
        </div>
      </div>

      {/* –¢–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
      {(selectedStatus !== "all" || selectedBrand !== "all" || searchQuery) && (
        <div className="mt-4 p-3 bg-gray-50 rounded-lg border border-gray-200">
          <div className="text-sm font-medium text-gray-700 mb-2">–ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:</div>
          <div className="flex flex-wrap gap-2">
            {selectedStatus !== "all" && (
              <span className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 border border-blue-200">
                üìä {getCurrentStatusLabel()}
                <button
                  onClick={() => onStatusChange("all")}
                  className="ml-2 text-blue-600 hover:text-blue-800"
                >
                  ‚úï
                </button>
              </span>
            )}
            {selectedBrand !== "all" && (
              <span className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800 border border-green-200">
                üè∑Ô∏è {selectedBrand}
                <button
                  onClick={() => onBrandChange("all")}
                  className="ml-2 text-green-600 hover:text-green-800"
                >
                  ‚úï
                </button>
              </span>
            )}
            {searchQuery && (
              <span className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-orange-100 text-orange-800 border border-orange-200">
                üîç "{searchQuery}"
                <button
                  onClick={() => onSearchChange("")}
                  className="ml-2 text-orange-600 hover:text-orange-800"
                >
                  ‚úï
                </button>
              </span>
            )}
          </div>
        </div>
      )}
    </div>
  );
}