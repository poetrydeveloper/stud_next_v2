// app/api/inventory/visual/route.ts
import { NextResponse } from "next/server";
import prisma from "@/app/lib/prisma";

export async function GET() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å –æ—Å—Ç–∞—Ç–∫–∞–º–∏ –∏ –ø—Ä–æ–¥–∞–∂–∞–º–∏ –∑–∞ –Ω–µ–¥–µ–ª—é
    const products = await prisma.product.findMany({
      include: {
        productUnits: {
          where: {
            OR: [
              { statusProduct: 'IN_STORE' },
              { 
                statusProduct: 'SOLD',
                soldAt: {
                  gte: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)
                }
              }
            ]
          }
        },
        category: {
          select: {
            name: true
          }
        },
        brand: {
          select: {
            name: true
          }
        }
      }
    });

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä
    const analyzedProducts = products.map(product => {
      const unitsInStore = product.productUnits.filter(unit => unit.statusProduct === 'IN_STORE').length;
      const salesLastWeek = product.productUnits.filter(unit => 
        unit.statusProduct === 'SOLD' && unit.soldAt
      ).length;

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ (–æ—Å—Ç–∞—Ç–∫–∏)
      let bgColor = 'bg-green-100'; // –ú–Ω–æ–≥–æ
      if (unitsInStore <= 5 && unitsInStore > 1) bgColor = 'bg-yellow-100'; // –ú–∞–ª–æ
      if (unitsInStore === 1) bgColor = 'bg-red-100'; // –ö—Ä–∏—Ç–∏—á–Ω–æ
      if (unitsInStore === 0) bgColor = 'bg-gray-100'; // –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –±–æ—Ä–¥–µ—Ä–∞ (–ø—Ä–æ–¥–∞–∂–∏)
      let borderColor = 'border-gray-300'; // –ù–∏–∑–∫–∏–µ –ø—Ä–æ–¥–∞–∂–∏
      if (salesLastWeek >= 2 && salesLastWeek <= 3) borderColor = 'border-yellow-400'; // –°—Ä–µ–¥–Ω–∏–µ
      if (salesLastWeek >= 4) borderColor = 'border-red-400'; // –í—ã—Å–æ–∫–∏–µ

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
      const recommendation = generateRecommendation(unitsInStore, salesLastWeek);

      return {
        id: product.id,
        name: product.name,
        code: product.code,
        category: product.category?.name,
        brand: product.brand?.name,
        unitsInStore,
        salesLastWeek,
        bgColor,
        borderColor,
        recommendation,
        // –î–ª—è CSS –∫–ª–∞—Å—Å–æ–≤
        bgClass: bgColor,
        borderClass: `${borderColor} border-2`,
        status: {
          stock: unitsInStore <= 1 ? 'critical' : unitsInStore <= 5 ? 'warning' : 'good',
          sales: salesLastWeek >= 4 ? 'high' : salesLastWeek >= 2 ? 'medium' : 'low'
        }
      };
    });

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º: —Å–Ω–∞—á–∞–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ, –ø–æ—Ç–æ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
    const sortedProducts = analyzedProducts.sort((a, b) => {
      // –°–Ω–∞—á–∞–ª–∞ –ø–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤
      if (a.unitsInStore === 1 && b.unitsInStore > 1) return -1;
      if (b.unitsInStore === 1 && a.unitsInStore > 1) return 1;
      
      // –ü–æ—Ç–æ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –æ—Å—Ç–∞—Ç–∫–æ–≤
      if (a.unitsInStore !== b.unitsInStore) return a.unitsInStore - b.unitsInStore;
      
      // –ü–æ—Ç–æ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º (–≤—ã—Å–æ–∫–∏–µ —Å–Ω–∞—á–∞–ª–∞)
      return b.salesLastWeek - a.salesLastWeek;
    });

    return NextResponse.json({
      ok: true,
      data: {
        products: sortedProducts,
        summary: {
          total: sortedProducts.length,
          critical: sortedProducts.filter(p => p.unitsInStore === 1).length,
          warning: sortedProducts.filter(p => p.unitsInStore > 1 && p.unitsInStore <= 5).length,
          good: sortedProducts.filter(p => p.unitsInStore > 5).length,
          highSales: sortedProducts.filter(p => p.salesLastWeek >= 4).length
        }
      }
    });

  } catch (error: any) {
    console.error("GET /api/inventory/visual error:", error);
    return NextResponse.json(
      { ok: false, error: error.message },
      { status: 500 }
    );
  }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
function generateRecommendation(unitsInStore: number, salesLastWeek: number): string {
  if (unitsInStore === 0) return '‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏ - —Å—Ä–æ—á–Ω—ã–π –∑–∞–∫–∞–∑';
  if (unitsInStore === 1 && salesLastWeek >= 2) return 'üö® –ö—Ä–∏—Ç–∏—á–Ω–æ! –ó–∞–∫–∞–∑–∞—Ç—å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ';
  if (unitsInStore === 1) return '‚ö†Ô∏è –û—Å—Ç–∞–ª—Å—è 1 —à—Ç - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–∫–∞–∑';
  if (unitsInStore <= 3 && salesLastWeek >= 3) return 'üì¶ –ú–∞–ª–æ –æ—Å—Ç–∞—Ç–∫–æ–≤ –ø—Ä–∏ –≤—ã—Å–æ–∫–æ–º —Å–ø—Ä–æ—Å–µ - –∑–∞–∫–∞–∑–∞—Ç—å';
  if (unitsInStore <= 5 && salesLastWeek >= 2) return 'üìà –ü–æ–ø—É–ª—è—Ä–Ω—ã–π —Ç–æ–≤–∞—Ä - –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø–∞—Å—ã';
  if (unitsInStore <= 5) return 'üëÄ –°–ª–µ–¥–∏—Ç—å –∑–∞ –æ—Å—Ç–∞—Ç–∫–∞–º–∏';
  if (salesLastWeek >= 4) return 'üî• –•–æ—Ä–æ—à–æ –ø—Ä–æ–¥–∞–µ—Ç—Å—è - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∑–∞–ø–∞—Å';
  
  return '‚úÖ –°—Ç–∞–±–∏–ª—å–Ω–æ';
}