// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Supplier {
  id            Int      @id @default(autoincrement())
  name          String
  contactPerson String?  @map("contact_person")
  phone         String?
  notes         String?
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  requestItems RequestItem[]

  @@map("suppliers")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  phone     String
  email     String?
  notes     String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  requestItems RequestItem[]

  @@map("customers")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String
  slug     String     @unique
  parentId Int?
  parent   Category?  @relation("CategoryToChildren", fields: [parentId], references: [id])
  children Category[] @relation("CategoryToChildren")

  products Product[]

  @@map("categories") // —á—Ç–æ–±—ã —Ç–∞–±–ª–∏—Ü–∞ –Ω–∞–∑—ã–≤–∞–ª–∞—Å—å categories
}

model Product {
  id          Int       @id @default(autoincrement())
  code        String    @unique
  name        String
  description String?
  categoryId  Int?
  category    Category? @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  images       ProductImage[]
  requestItems RequestItem[] // üî• –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å

  @@map("products")
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  productId Int
  product   Product @relation(fields: [productId], references: [id])

  filename  String // —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ (rf-75510_main.jpg)
  path      String // –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∏–ª–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π ("img/products/rf-75510/rf-75510_main.jpg")
  isMain    Boolean  @default(false)
  createdAt DateTime @default(now())

  @@map("product_images")
}

model Request {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  notes     String?

  items RequestItem[]

  @@map("requests")
}

model RequestItem {
  id                Int        @id @default(autoincrement())
  requestId         Int?
  request           Request?   @relation(fields: [requestId], references: [id], onDelete: SetNull)
  productId         Int
  product           Product    @relation(fields: [productId], references: [id], onDelete: Restrict)
  status            ItemStatus @default(CANDIDATE)
  quantity          Int        @default(1)
  deliveredQuantity Int        @default(0)
  isCompleted       Boolean    @default(false)
  pricePerUnit      Decimal    @default(0.00)
  
  // üî• –û–ë–ù–û–í–õ–ï–ù–û: –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è –Ω–∞ —Å–≤—è–∑–∏ —Å –º–æ–¥–µ–ª—è–º–∏
  supplierId        Int?       // –°–≤—è–∑—å —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º
  supplier          Supplier?  @relation(fields: [supplierId], references: [id], onDelete: SetNull)
  
  customerId        Int?       // –°–≤—è–∑—å —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º
  customer          Customer?  @relation(fields: [customerId], references: [id], onDelete: SetNull)

  @@map("request_items")
}

enum ItemStatus {
  CANDIDATE // –∫–∞–Ω–¥–∏–¥–∞—Ç –Ω–∞ –∑–∞—è–≤–∫—É
  IN_REQUEST // –≤ –∑–∞—è–≤–∫–µ
  EXTRA // —ç–∫—Å—Ç—Ä–∞ –∑–∞—è–≤–∫–∞
}
