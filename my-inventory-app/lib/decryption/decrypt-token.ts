// lib/decryption/decrypt-token.ts
import crypto from 'crypto';

export function decryptToken(encryptedData: string | any, encryptionKey: string): string {
  try {
    console.log('üîê DecryptToken: –ù–∞—á–∞–ª–æ –¥–µ—à–∏—Ñ—Ä–æ–≤–∫–∏');
    
    const data = typeof encryptedData === 'string' 
      ? JSON.parse(encryptedData) 
      : encryptedData;
    
    const algorithm = 'aes-256-cbc';
    
    const decipher = crypto.createDecipheriv(
      algorithm, 
      Buffer.from(encryptionKey, 'hex'), 
      Buffer.from(data.iv, 'hex')
    );
    
    let decrypted = decipher.update(data.encryptedToken, 'hex', 'utf8');
    decrypted += decipher.final('utf8');
    
    console.log('‚úÖ DecryptToken: –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω');
    return decrypted;
  } catch (error) {
    console.error('‚ùå DecryptToken: –û—à–∏–±–∫–∞ –¥–µ—à–∏—Ñ—Ä–æ–≤–∫–∏:', error);
    throw new Error('–û—à–∏–±–∫–∞ –¥–µ—à–∏—Ñ—Ä–æ–≤–∫–∏ —Ç–æ–∫–µ–Ω–∞: ' + error.message);
  }
}